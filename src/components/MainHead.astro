---
import "../styles/global.css";

interface Props {
  title?: string;
  description?: string;
  image?: string;
}

const {
  title = "Dmytro Lysachenko | Professional Portfolio",
  description = "A professional portfolio showcasing my skills, projects, and experience in web and mobile development.",
  image = "seo-preview.webp",
} = Astro.props;

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const imageURL = new URL(image, Astro.site);
---

<!-- Basic Meta Tags -->
<meta charset="UTF-8" />
<meta
  name="viewport"
  content="width=device-width, initial-scale=1.0"
/>
<meta
  name="description"
  content={description}
/>
<meta
  name="keywords"
  content="portfolio, web development, design, next.js, typescript, javascript, astro, express.js, node.js, mobile development"
/>
<meta
  name="author"
  content="Dmytro Lysachenko"
/>

<!-- Canonical URL -->
<link
  rel="canonical"
  href={canonicalURL}
/>

<!-- Open Graph (Facebook) Meta Tags -->

<meta
  property="og:type"
  content="website"
/>
<meta
  property="og:title"
  content={title}
/>
<meta
  property="og:description"
  content={description}
/>
<meta
  property="og:url"
  content={canonicalURL}
/>
<meta
  property="og:image"
  content={imageURL}
/>
<meta
  property="og:site_name"
  content="Dmytro Lysachenko | Portfolio"
/>

<!-- Twitter (X) Meta Tags -->
<meta
  name="twitter:card"
  content="summary_large_image"
/>
<meta
  name="twitter:title"
  content={title}
/>
<meta
  name="twitter:description"
  content={description}
/>
<meta
  name="twitter:image"
  content={imageURL}
/>
<meta
  name="twitter:site"
  content="@DLysachenk92670"
/>
<meta
  name="twitter:creator"
  content="@DLysachenk92670"
/>

<!-- Google / Search Engine Meta Tags -->
<meta
  itemprop="name"
  content={title}
/>
<meta
  itemprop="description"
  content={description}
/>

<link
  rel="sitemap"
  href={new URL("sitemap-index.xml", Astro.site)}
/>

<meta
  name="generator"
  content={Astro.generator}
/>
<title>{title}</title>

<link
  rel="icon"
  type="image/svg+xml"
  href="/favicon.svg"
/>
<link
  rel="preconnect"
  href="https://fonts.googleapis.com"
/>
<link
  rel="preconnect"
  href="https://fonts.gstatic.com"
  crossorigin
/>
<link
  href="https://fonts.googleapis.com/css2?family=Public+Sans:ital,wght@0,400;0,700;1,400&family=Rubik:wght@500;600&display=swap"
  rel="stylesheet"
/>

<script is:inline>
  // This code is inlined in the head to make dark mode instant & blocking.
  const getThemePreference = () => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    return window.matchMedia("(prefers-color-scheme: dark)").matches
      ? "dark"
      : "light";
  };
  const isDark = getThemePreference() === "dark";
  document.documentElement.classList[isDark ? "add" : "remove"]("theme-dark");

  if (typeof localStorage !== "undefined") {
    // Watch the document element and persist user preference when it changes.
    const observer = new MutationObserver(() => {
      const isDark = document.documentElement.classList.contains("theme-dark");
      localStorage.setItem("theme", isDark ? "dark" : "light");
    });
    observer.observe(document.documentElement, {
      attributes: true,
      attributeFilter: ["class"],
    });
  }
</script>
